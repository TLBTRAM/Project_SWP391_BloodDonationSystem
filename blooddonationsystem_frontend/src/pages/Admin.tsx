import React, { useState } from 'react';
import './components/Admin.css';
import { Link } from 'react-router-dom';
import { useNavigate } from 'react-router-dom';
import logoBlood from './images/Logo/logo_blood.png';

interface Account {
  id: number;
  name: string;
  email: string;
  role: 'Ng∆∞·ªùi d√πng' | 'Nh√¢n vi√™n y t·∫ø' | 'Qu·∫£n l√Ω kho m√°u';
}

const initialAccounts: Account[] = [
  { id: 1, name: 'Nguy·ªÖn VƒÉn A', email: 'a@example.com', role: 'Ng∆∞·ªùi d√πng' },
  { id: 2, name: 'Tr·∫ßn Th·ªã B', email: 'b@example.com', role: 'Nh√¢n vi√™n y t·∫ø' },
  { id: 3, name: 'L√™ VƒÉn C', email: 'c@example.com', role: 'Qu·∫£n l√Ω kho m√°u' },
  { id: 4, name: 'Ph·∫°m VƒÉn D', email: 'd@example.com', role: 'Ng∆∞·ªùi d√πng' },
  { id: 5, name: 'Ho√†ng Th·ªã E', email: 'e@example.com', role: 'Nh√¢n vi√™n y t·∫ø' },
];

const adminName = 'Admin'; // b·∫°n c√≥ th·ªÉ l·∫•y t·ª´ props, state, ho·∫∑c context n·∫øu c·∫ßn

const handleLogout = () => {
  // X·ª≠ l√Ω ƒëƒÉng xu·∫•t t·∫°i ƒë√¢y
  alert('ƒêƒÉng xu·∫•t th√†nh c√¥ng!');
};

const Admin: React.FC = () => {
  const [accounts, setAccounts] = useState<Account[]>(initialAccounts);
  const [search, setSearch] = useState('');
  const [filterRole, setFilterRole] = useState<string>('T·∫•t c·∫£');

  const handleDelete = (id: number) => {
    if (window.confirm('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a t√†i kho·∫£n n√†y?')) {
      setAccounts(accounts.filter(account => account.id !== id));
    }
  };

  const filteredAccounts = accounts.filter(account => {
    const matchesRole = filterRole === 'T·∫•t c·∫£' || account.role === filterRole;
    const matchesSearch = account.name.toLowerCase().includes(search.toLowerCase());
    return matchesRole && matchesSearch;
  });

  const roleCounts = {
    'Ng∆∞·ªùi d√πng': accounts.filter(a => a.role === 'Ng∆∞·ªùi d√πng').length,
    'Nh√¢n vi√™n y t·∫ø': accounts.filter(a => a.role === 'Nh√¢n vi√™n y t·∫ø').length,
    'Qu·∫£n l√Ω kho m√°u': accounts.filter(a => a.role === 'Qu·∫£n l√Ω kho m√°u').length,
  };

  return (
  <>
    <header className="admin-header">
      <div className="admin-logo">
        <Link to="/">
          <img src={logoBlood} alt="Logo" className="logo-img" />
        </Link>
      </div>
      <div className="admin-greeting">
        Xin ch√†o, <span className="admin-name">{adminName}</span>
      </div>
      <button className="admin-logout-btn" onClick={handleLogout}>
        ƒêƒÉng xu·∫•t
      </button>
    </header>


    <div className="admin-container">
      <h1>Qu·∫£n l√Ω t√†i kho·∫£n</h1>

      <div className="role-summary">
        <div className="summary-box">
          <div className="summary-icon">üë§</div>
          <div className="summary-role">Ng∆∞·ªùi d√πng</div>
          <div className="summary-count">{roleCounts['Ng∆∞·ªùi d√πng']}</div>
        </div>
        <div className="summary-box">
          <div className="summary-icon">ü©∫</div>
          <div className="summary-role">Nh√¢n vi√™n y t·∫ø</div>
          <div className="summary-count">{roleCounts['Nh√¢n vi√™n y t·∫ø']}</div>
        </div>
        <div className="summary-box">
          <div className="summary-icon">ü©∏</div>
          <div className="summary-role">Qu·∫£n l√Ω kho m√°u</div>
          <div className="summary-count">{roleCounts['Qu·∫£n l√Ω kho m√°u']}</div>
        </div>
      </div>

      <div className="admin-controls">
        <input
          type="text"
          placeholder="T√¨m theo t√™n..."
          value={search}
          onChange={e => setSearch(e.target.value)}
        />
        <select value={filterRole} onChange={e => setFilterRole(e.target.value)}>
          <option value="T·∫•t c·∫£">T·∫•t c·∫£</option>
          <option value="Ng∆∞·ªùi d√πng">Ng∆∞·ªùi d√πng</option>
          <option value="Nh√¢n vi√™n y t·∫ø">Nh√¢n vi√™n y t·∫ø</option>
          <option value="Qu·∫£n l√Ω kho m√°u">Qu·∫£n l√Ω kho m√°u</option>
        </select>
      </div>

      <table className="admin-table">
        <thead>
          <tr>
            <th>T√™n</th>
            <th>Email</th>
            <th>Vai tr√≤</th>
            <th>H√†nh ƒë·ªông</th>
          </tr>
        </thead>
        <tbody>
          {filteredAccounts.length > 0 ? (
            filteredAccounts.map(account => (
              <tr key={account.id}>
                <td>{account.name}</td>
                <td>{account.email}</td>
                <td>{account.role}</td>
                <td>
                  <button className="edit-btn">S·ª≠a</button>
                  <button className="delete-btn" onClick={() => handleDelete(account.id)}>
                    X√≥a
                  </button>
                </td>
              </tr>
            ))
          ) : (
            <tr>
              <td colSpan={4}>Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n ph√π h·ª£p.</td>
            </tr>
          )}
        </tbody>
      </table>
    </div>
  </>
);
};

export default Admin;
